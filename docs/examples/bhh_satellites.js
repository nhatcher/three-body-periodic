// Broucke–Hadjidemetriou–Hénon (BHH) 
// 
// Table 3 presets
// (a) 1.0124 0.9968 −1.32962 −0.88963 −0.28501 9.2111
// (b) 0.5312 2.2837 −0.97138 −1.37584 −0.34528 7.0421
// (c) 0.8056 2.0394 −1.05795 −1.24044 −0.26723 7.4389
// (d) 0.3916 0.8341 −1.21503 −1.00328 −0.53749 9.2807
// (e) 0.1472 3.4219 −0.80027 −1.74811 −0.42176 5.8793
// (f) 0.8413 1.4155 −1.17777 −1.05903 −0.29934 8.3444

// Table 4 presets
// (a) 1.0283 0.9879 −1.62064 −0.65955 −0.14784 6.9193
// (b) 1.5142 0.4968 −1.90809 −0.50283 −0.08614 8.2924
// (c) 2.9216 31.9067 −1.22892 −2.37239 0.09481 1.6822
// (d) 4.4143 18.6575 −1.32880 −1.86103 0.25507 2.3306
// (e) 10.3501 10.4522 −1.69797 −1.22777 0.86183 3.5607
// (f) 18.7011 4.2388 −2.51585 −0.53262 1.49754 5.9612


const 𝜃3_max = 0.38316088765562;
const 𝜃4_max = 0.0105056462558377;

// Helper to build an orbit tuple: [state, t, θ_max]
function buildOrbit({ m1, m2 = 1, m3, x1, v1, v3, t, 𝜃}) {
    const v2 = -(m1 * v1 + m3 * v3) / m2;
    const xcm = (m1 * x1 + m2 * 0 + m3 * 1) / (m1 + m2 + m3);
    const x1c = x1 - xcm;
    const x2c = -xcm;
    const x3c = 1 - xcm;

    return [
        [
            x1c, 0, 0, 0, v1, 0, m1,
            x2c, 0, 0, 0, v2, 0, m2,
            x3c, 0, 0, 0, v3, 0, m3
        ],
        t,
        𝜃,
    ];

}

const DATA = [
    { m1: 1.0124, m3: 0.9968, x1: -1.32962, v1: -0.88963, v3: -0.28501, t: 9.2111, 𝜃: 𝜃3_max},
    { m1: 0.5312, m3: 2.2837, x1: -0.97138, v1: -1.37584, v3: -0.34528, t: 7.0421, 𝜃: 𝜃3_max },
    { m1: 0.8056, m3: 2.0394, x1: -1.05795, v1: -1.24044, v3: -0.26723, t: 7.4389, 𝜃: 𝜃3_max },
    { m1: 0.3916, m3: 0.8341, x1: -1.21503, v1: -1.00328, v3: -0.53749, t: 9.2807, 𝜃: 𝜃3_max },
    { m1: 0.1472, m3: 3.4219, x1: -0.80027, v1: -1.74811, v3: -0.42176, t: 5.8793, 𝜃: 𝜃3_max },
    { m1: 0.8413, m3: 1.4155, x1: -1.17777, v1: -1.05903, v3: -0.29934, t: 8.3444, 𝜃: 𝜃3_max },
    { m1: 1.0283, m3: 0.9879, x1: -1.62064, v1: -0.65955, v3: -0.14784, t: 6.9193, 𝜃: 𝜃4_max },
    { m1: 1.5142, m3: 0.4968, x1: -1.90809, v1: -0.50283, v3: -0.08614, t: 8.2924, 𝜃: 𝜃4_max },
    { m1: 2.9216, m3: 31.9067, x1: -1.22892, v1: -2.37239, v3: 0.09481, t: 1.6822, 𝜃: 𝜃4_max },
    { m1: 4.4143, m3: 18.6575, x1: -1.32880, v1: -1.86103, v3: 0.25507, t: 2.3306, 𝜃: 𝜃4_max },
    { m1: 10.3501, m3: 10.4522, x1: -1.69797, v1: -1.22777, v3: 0.86183, t: 3.5607, 𝜃: 𝜃4_max },
    { m1: 18.7011, m3: 4.2388, x1: -2.51585, v1: -0.53262, v3: 1.49754, t: 5.9612, 𝜃: 𝜃4_max },
];

const NAMES = [
    'BHH Table 3 (a)',
    'BHH Table 3 (b)',
    'BHH Table 3 (c)',
    'BHH Table 3 (d)',
    'BHH Table 3 (e)',
    'BHH Table 3 (f)',
    'BHH Table 4 (a)',
    'BHH Table 4 (b)',
    'BHH Table 4 (c)',
    'BHH Table 4 (d)',
    'BHH Table 4 (e)',
    'BHH Table 4 (f)',
];


const bhh_table_3 = {
    getNames: () => [...NAMES],
    getOrbit: (index) => {
        const spec = DATA[index];
        return buildOrbit(spec);
    },
};

export default bhh_table_3;
